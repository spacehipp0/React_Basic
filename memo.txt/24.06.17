JSX 문법 3가지

1.React 에서 클래스명 정의 : className

2.변수를 html에 꽂아넣을 때(Data Binding) : {중괄호}
ex)
let post = '강남 우동 맛집'
<div>{ post }</div>  
document.getElementById().innerHTML = ??를 간단하게 할 수 있음

3.html에 style 속성 넣고 싶을 때
<div style ={속성명 : '속성값'}
<div style={ {color : 'blue', fontSize : '30px'} }> 글씨 </div>

state (중요한 변수 담는 용도?) 사용법

js 맨 윗줄에 import { useState } from 'react'; 작성

원하는 곳에서 useState('보관할 자료')쓰면 state 자료 저장 가능

let [a,b] = useState('남자 코트 추천');

let 뒤에 저거 무슨 문법임

1.let [name, age] = ['kim', 20]; 각각 매칭하는 용도 

2. let [a, b] = useState('남자 코트 추천'); 
   --> a에는 '남자 코트 추천'같은 자료가 들어감
   --> b에는 state변경을 도와주는 함수가 들어감

**변수 놔두고 왜 state 문법을 쓸까? **

--> **용도는 같지만, state는 변동 사항이 생기면 html도 자동으로 "재랜더링"해주기 때문이다.
    So, 자주 변경될 것 같은 data들은 state를 쓰자

state 변경하고 싶으면?
--> b(변경 할 state함수) 
--> array나 objet를 다룰때 원본은 보존하는게 좋다.
--> 그래서 복사본을 만들어 사용한다.  

독립적인 복사본(shallow, deep copy) 만들고, spread operator(...) 써서 **화살표** 다르게만들고
그걸 바꿔서 사용


JS는 array나 objet 자료 생성시, RAM이라는 가상 공간에 저장함
그래서 변수에는 그 변수가 어디 있는지 가리키는 화살표같은 표시만 담겨있다
그래서 spread operator를 사용하지 않으면 변수가 아닌 화살표 표시를 복사하는 것이다.


component 문법 

-- 복잡한 html를 깔끔하게 치환해서 박을 수 있는 문법

function Modal(){
  return (
    <div className="modal">
      <h4>제목</h4>
      <p>날짜</p>
      <p>상세내용</p>
    </div>
  )
}   이렇게 만들고 

원하는 곳에서 <Modal></Modal> or <Modal/>로 불러올 수 있다.\

근데 html 코드짤 때 유의점이 있는데 

return ( ) 안에 두개의 html 태그 나란히 적기 이런거 안됩니다. 

return ( ) 내부는 하나의 태그로 시작해서 하나의 태그로 끝나야합니다. 

ex> 
return(
  <div></div>
  <div></div>
)  --> 이게 불가능 함

Solution 

return(
  <div>
    <div></div>
    <div></div>
  </div>
)

return(
  <>
    <div></div>
    <div></div>
  </>
)   

--> div로 감싸거나, <></>를 사용 (fragment)


component만들 때 주의점

1. 영어 대문자로 시작?
2. function App(){} 내부에서 사용불가 why?
    --> component 안에 component 를 만들진 않음


언제 쓰는게 좋을까?

1. 사이트에 반복해서 출현하는 HTML 덩어리들 
2. 내용이 매우 자주 변경될 것 같은 HTML 부분
3. 다른 페이지를 만들고 싶다면 그 페이지의 HTML 내용을 하나의 Component로 만드는게 좋습니다.


단점

1. 일단 HTML 깔끔하게 쓰려고 Component를 수백개 만들면 그것 만으로도 관리가 힘듭니다.

예를 들어서 function Modal 안에서 글제목 state를 쓰고싶어서 {글제목} 이렇게 쓰면 잘 안되는데 

왜냐면 당연히 자바스크립트에선

한 function 안에 있는 변수를 다른 function에서 맘대로 쓸 수 없어서 그렇습니다. 

props라는 문법을 이용해 state를 <Modal>까지 전해줘야 비로소 사용가능합니다.